name: Build Flake

on:
  workflow_call:
    inputs:
      derivation: # the derivation to build
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-success: ${{ steps.build-result.outputs.success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      # - name: Apply CI User Info
      #   run: |
      #     cd /home/runner/work/nixos-config/nixos-config/my-config
      #     /home/runner/work/nixos-config/nixos-config/bin/apply-ci

      - name: Build Nix Flake
        run: |
          git add .
          echo "Building Flake..."
          # if nix build --extra-experimental-features 'nix-command flakes' .#nixosConfigurations.vinnix.config.system.build.toplevel; then
          if nix build --extra-experimental-features 'nix-command flakes' .#{{ inputs.derivation }}; then
            echo "success=true" >> $GITHUB_ENV
          else
            echo "Build failed, listing flake.lock for debugging:"
            cat flake.lock
            echo "success=false" >> $GITHUB_ENV
            exit 1
          fi

      - name: Determine build result
        id: build-result
        run: echo "success=${{ env.success }}" >> $GITHUB_OUTPUj
